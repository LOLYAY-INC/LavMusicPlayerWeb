name: Build and Release Project

on:
  push:
    branches:
      - main  # Or 'master', depending on your default branch name
  workflow_run:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    # Grant permissions for the workflow to create a release on your behalf.
    permissions:
      contents: write

    steps:
      # 1. Check out the repository's code
      # fetch-depth: 0 is required to get the full git history for an accurate commit count.
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Set up the Node.js environment for Vite/Svelte
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Use a recent Long-Term Support (LTS) version of Node.js
          cache: 'npm' # Cache npm dependencies for faster builds

      # 3. Install project dependencies
      - name: Install dependencies
        run: npm install

      # 4. Build the Vite Svelte project
      # This command will create a 'dist' directory with your static production files.
      - name: Build project
        run: npm run build

      # 5. Generate version tag based on your schema
      # This step generates the tag that will be used for the release.
      - name: Generate version tag
        id: version
        run: |
          VERSION_TAG="v2.0.$(git rev-list --count HEAD)-AUTO"
          echo "tag=${VERSION_TAG}" >> $GITHUB_OUTPUT

      # 6. Zip the build output into 'assets.zip'
      # The -r flag is for recursive zipping, and -j "junks" the directory paths.
      # This ensures the files are at the root of the zip, not inside a 'dist' folder.
      - name: Create zip file
        run: zip -r -j assets.zip dist/*

      # 7. Create a GitHub Release and upload the zip file as an asset
      # We use a popular and robust action for creating releases.
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          # The action automatically uses the GITHUB_TOKEN secret.
          tag_name: ${{ steps.version.outputs.tag }}
          name: Release ${{ steps.version.outputs.tag }}
          generate_release_notes: true
          files: assets.zip # This is where we attach our zipped assets.